#VS

#version 400 core

out vec3 CubeCoords;

#include shaders/common/common.vert

void main()
{
    CubeCoords = vPosition.xyz;
    vec4 pos =  vec4(vPosition.xyz, 1.0) * mat4(mat3(g_matWorldToView)) * g_matWorldToProjection;
    gl_Position = pos.xyww;
}

#FS

#version 330 core

in vec3 CubeCoords;

#material samplerHDR skybox

#include shaders/common/common.frag

const vec2 invAtan = vec2(0.1591, 0.3183);
vec2 SampleSphericalMap(vec3 v)
{
    vec2 uv = vec2(atan(v.z, v.x), asin(-v.y));
    uv *= invAtan;
    uv += 0.5;
    return uv;
}

void main()
{
    vec2 uv = SampleSphericalMap(normalize(CubeCoords));
    vec3 color = texture(skybox, uv).rgb;

    vColor = vec4(color, 1.0);
}